export default `设置
{
	模式
	{
		占领要点

		攻击护送

		攻防作战

		运载目标

		综合
		{
			职责限制: 每队同一职责最多2名
		}
	}

	英雄
	{
		综合
		{
			主要攻击模式: 关闭
		}
	}

	地图工坊
	{
		等待时间1: 0.096
		等待时间2: 0.096
	}
}

变量
{
	玩家:
		0: text
		1: length
		2: playing
		3: text_input
		4: text_hero
		5: route
		6: choice
		7: is_select
		8: select_view
		9: select_index
		10: select_number
		11: refresh_select
		12: next_route
}

规则("----------- GAL  AVG 游戏基础模板 by misaka#51577 ---------------")
{
	事件
	{
		持续 - 全局;
	}
}

规则("初始化")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建HUD文本(所有玩家(所有队伍), 自定义字符串(""), 无, 自定义字符串("\\r\\n\\r\\n\\r\\n\\r\\n\\r\\r\\n\\r\\n\\r\\n\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n"), 顶部, 2,
			自定义颜色(地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("标题颜色-R"), 255, 0, 255, 0), 地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("标题颜色-G"), 255, 0, 255, 0),
			地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("标题颜色-B"), 255, 0, 255, 0), 255), 颜色(白色), 自定义颜色(地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("文本颜色-R"),
			255, 0, 255, 0), 地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("文本颜色-G"), 255, 0, 255, 0), 地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("文本颜色-B"), 255,
			0, 255, 0), 255), 可见和字符串, 默认可见度);
	}
}

规则("播放函数，设置playing=真触发")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.playing == 真;
		事件玩家.length < 数量(事件玩家.text_input);
	}

	动作
	{
		根据条件跳过(地图工坊设置开关(自定义字符串("AVG设置"), 自定义字符串("禁用文本声音"), 假, 0) == 真, 2);
		等待(地图工坊设置实数(自定义字符串("AVG设置"), 自定义字符串("等待时间1"), 0.100, 0.016, 1, 0), 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 事件玩家, 地图工坊设置整数(自定义字符串("AVG设置"), 自定义字符串("文本音量"), 100, 30, 300, 0));
		等待(地图工坊设置实数(自定义字符串("AVG设置"), 自定义字符串("等待时间2"), 0.100, 0.016, 1, 0), 无视条件);
		事件玩家.text = 自定义字符串("{0}{1}", 事件玩家.text, 事件玩家.text_input[事件玩家.length]);
		事件玩家.length += 1;
		如条件为”真“则循环;
		"当前分支为选择分支,则触发一次选择分支刷新"
		If(事件玩家.is_select == 真);
			事件玩家.choice = 0;
			事件玩家.select_index = 0;
			事件玩家.refresh_select = 真;
		End;
	}
}

规则("播放结束函数，即按左键继续")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(主要攻击模式)) == 真;
		事件玩家.length == 数量(事件玩家.text_input);
		事件玩家.playing == 真;
		事件玩家.is_select == 假;
	}

	动作
	{
		事件玩家.playing = 假;
		事件玩家.length = 0;
		事件玩家.text = 自定义字符串("");
		If(字符串长度(事件玩家.next_route) > 0);
			事件玩家.route = 事件玩家.next_route;
			事件玩家.next_route = 自定义字符串("");
		End;
	}
}

规则("选择下一项，即在选择分支中按左键")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(主要攻击模式)) == 真;
		事件玩家.length == 数量(事件玩家.text_input);
		事件玩家.playing == 真;
		事件玩家.is_select == 真;
	}

	动作
	{
		等待(0.100, 无视条件);
		事件玩家.select_index = 事件玩家.select_index + 1 < 事件玩家.select_number ? 事件玩家.select_index + 1 : 0;
		事件玩家.refresh_select = 真;
	}
}

规则("选择确定，即在选择分支中点右键，根据选中设置choice")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(辅助攻击模式)) == 真;
		事件玩家.length == 数量(事件玩家.text_input);
		事件玩家.playing == 真;
		事件玩家.is_select == 真;
	}

	动作
	{
		事件玩家.is_select = 假;
		事件玩家.playing = 假;
		事件玩家.length = 0;
		事件玩家.text = 自定义字符串("");
		事件玩家.select_view = 自定义字符串("");
		事件玩家.choice = 1 + 事件玩家.select_index;
	}
}

规则("玩家初始化")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		已重生(事件玩家) == 真;
	}

	动作
	{
		事件玩家.text = 自定义字符串("");
		事件玩家.select_view = 自定义字符串("");
		创建HUD文本(事件玩家, 事件玩家.playing == 真 ? 英雄图标字符串(事件玩家.text_hero) : 自定义字符串(""), 事件玩家.length == 数量(事件玩家.text_input) && 事件玩家.playing == 真 ? (
			事件玩家.is_select == 真 ? 自定义字符串("按{0}选择，按{1}确定", 输入绑定字符串(按钮(主要攻击模式)), 输入绑定字符串(按钮(辅助攻击模式))) : 自定义字符串("按{0}继续", 输入绑定字符串(按钮(
			主要攻击模式)))) : 自定义字符串(""), 事件玩家.text, 顶部, 6, 颜色(天蓝色), 颜色(白色), 颜色(青绿色), 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 无, 无, 事件玩家.select_view, 顶部, 7, 颜色(白色), 颜色(白色), 颜色(青绿色), 可见和字符串, 默认可见度);
		等待(1, 无视条件);
	}
}

规则("----------- GAL  AVG 游戏基础模板 by misaka#51577 https://owmod.net/1387 ---------------")
{
	事件
	{
		持续 - 全局;
	}
}
`
